{"ast":null,"code":"import { createElement } from 'react';\nimport { useForm, FormProvider, useFormContext } from 'react-hook-form';\nimport styled, { ThemeProvider } from 'styled-components';\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  width: \", \";\\n  margin: auto;\\n  margin-top: 1em;\\n  border: \", \" solid\\n    \", \";\\n  color: \", \";\\n  background-color: \", \";\\n  padding: \", \";\\n  border-radius: \", \";\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  border-radius: \", \";\\n  border: \", \";\\n  padding: 10px 15px;\\n  margin-bottom: 10px;\\n  background: grey;\\n  font-family: \", \";\\n  text-align: center;\\n  background-color: \", \";\\n  color: \", \";\\n  text-transform: uppercase;\\n  border: none;\\n  margin-top: 30px;\\n  padding: \", \";\\n  font-size: 20px;\\n  font-weight: \", \";\\n  display: flex;\\n  justify-content: center;\\n  letter-spacing: \", \";\\n  margin-right: \", \";\\n  &:hover {\\n    background: \", \";\\n  }\\n  &:active {\\n    transition: 0.3s all;\\n    transform: translateY(5px);\\n    border: 1px solid transparent;\\n    opacity: 0.8;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  line-height: 2;\\n  text-align: left;\\n  display: block;\\n  margin-bottom: 13px;\\n  margin-top: 20px;\\n  color: \", \";\\n  font-size: 14px;\\n  font-weight: 200;\\n  font-family: \", \";\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  border-radius: \", \";\\n  border: \", \" solid\\n    \", \";\\n  padding: 10x 15px;\\n  margin-bottom: 10px;\\n  font-size: 14px;\\n  background-color: \", \";\\n  height: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  display: block;\\n  box-sizing: border-box;\\n  width: 100%;\\n  border-radius: \", \";\\n  border: \", \" solid\\n    \", \";\\n  padding: 10px 15px;\\n  margin-bottom: 10px;\\n  font-size: 14px;\\n  height: 40px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  font-weight: \", \";\\n  color: \", \";\\n  text-align: center;\\n  padding-bottom: 10px;\\n  border-bottom: \", \" solid\\n    \", \";\\n  font-family: \", \";\\n  font-size: \", \";\\n  background-color: \", \";\\n  border-radius: \", \";\\n  display: flex;\\n  justify-content: center;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar StyledHeading = styled.h1(_templateObject(), function (props) {\n  return props.theme.fontWeight;\n}, function (props) {\n  return props.theme.headingColor;\n}, function (props) {\n  return props.theme.headingBorderBottom;\n}, function (props) {\n  return props.theme.headingBorderColor;\n}, function (props) {\n  return props.theme.primaryFont;\n}, function (props) {\n  return props.theme.headingSize;\n}, function (props) {\n  return props.theme.headingBackgroundColor;\n}, function (props) {\n  return props.theme.headingBorderRadius;\n});\nvar StyledInput = styled.input(_templateObject2(), function (props) {\n  return props.theme.inputBorderRadius;\n}, function (props) {\n  return props.theme.inputBorderWeight;\n}, function (props) {\n  return props.theme.inputBorderColor;\n}, function (props) {\n  return props.theme.inputBackgroundColor;\n});\nvar StyledMessageInput = styled.input(_templateObject3(), function (props) {\n  return props.theme.inputBorderRadius;\n}, function (props) {\n  return props.theme.inputBorderWeight;\n}, function (props) {\n  return props.theme.inputBorderColor;\n}, function (props) {\n  return props.theme.inputBackgroundColor;\n}, function (props) {\n  return props.theme.messageInputHeight;\n});\nvar StyledLabel = styled.label(_templateObject4(), function (props) {\n  return props.theme.primaryColor;\n}, function (props) {\n  return props.theme.primaryFont;\n});\nvar StyledButton = styled.button(_templateObject5(), function (props) {\n  return props.theme.inputBorderRadius;\n}, function (props) {\n  return props.theme.inputBorder;\n}, function (props) {\n  return props.theme.primaryFont;\n}, function (props) {\n  return props.theme.buttonBackgroundColor;\n}, function (props) {\n  return props.theme.buttonFontColor;\n}, function (props) {\n  return props.theme.buttonPadding;\n}, function (props) {\n  return props.theme.fontWeight;\n}, function (props) {\n  return props.theme.buttonLetterSpacing;\n}, function (props) {\n  return '-' + props.theme.buttonLetterSpacing;\n}, function (props) {\n  return props.theme.buttonHoverColor;\n});\nvar StyledForm = styled.form(_templateObject6(), function (props) {\n  return props.theme.width;\n}, function (props) {\n  return props.theme.formBorderWeight;\n}, function (props) {\n  return props.theme.formBorderColor;\n}, function (props) {\n  return props.theme.primaryColor;\n}, function (props) {\n  return props.theme.backgroundColor;\n}, function (props) {\n  return props.theme.formPadding;\n}, function (props) {\n  return props.theme.formBorderRadius;\n});\nvar defaultTheme = {\n  primaryColor: 'black',\n  primaryFont: 'Courier New',\n  buttonLetterSpacing: '20px',\n  buttonPadding: '20px',\n  buttonBackgroundColor: 'black',\n  buttonFontColor: 'white',\n  headingBackgroundColor: '#fbf8f5',\n  headingBorderRadius: '',\n  headingSize: '30px',\n  headingColor: 'black',\n  inputBackgroundColor: 'white',\n  inputBorderRadius: '15px',\n  inputBorderWeight: '2px',\n  inputBorderColor: 'grey',\n  formPadding: '20px',\n  formBorderRadius: '35px',\n  formBorderWeight: '1px',\n  formBorderColor: 'grey',\n  backgroundColor: '#fbf8f5',\n  title: 'bonjour',\n  fontWeight: '200',\n  width: '325px',\n  headingBorderBottom: '2px',\n  headingBorderColor: 'black',\n  messageInputHeight: '70px',\n  buttonHoverColor: 'grey'\n};\n\nfunction Form(_ref) {\n  var children = _ref.children,\n      theme = _ref.theme;\n  var methods = useForm();\n\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n\n  Object.assign(defaultTheme, theme);\n  return createElement(ThemeProvider, {\n    theme: defaultTheme\n  }, createElement(FormProvider, Object.assign({}, methods), createElement(StyledForm, {\n    className: 'App',\n    onSubmit: methods.handleSubmit(onSubmit)\n  }, children)));\n}\n\nfunction Heading(_ref) {\n  var title = _ref.title;\n  return createElement(\"div\", {\n    className: 'heading_wrapper'\n  }, createElement(StyledHeading, null, \" \", title || 'Get in touch!'));\n}\n\nfunction FirstName() {\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      errors = _useFormContext.errors;\n\n  return createElement(\"div\", {\n    className: 'first_name_wrapper'\n  }, createElement(StyledLabel, null, \"First Name\"), createElement(StyledInput, {\n    name: 'firstName',\n    ref: register({\n      required: true\n    })\n  }), errors.firstName && createElement(\"p\", null, \"This field is required\"));\n}\n\nfunction LastName() {\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      errors = _useFormContext.errors;\n\n  return createElement(\"div\", {\n    className: 'last_name_wrapper'\n  }, createElement(StyledLabel, null, \"Last Name\"), createElement(StyledInput, {\n    name: 'lastName',\n    ref: register({\n      required: true\n    })\n  }), errors.lastName && createElement(\"p\", null, \"This field is required\"));\n}\n\nfunction Email() {\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      errors = _useFormContext.errors;\n\n  return createElement(\"div\", {\n    className: 'email_wrapper'\n  }, createElement(StyledLabel, null, \"Email Address\"), createElement(StyledInput, {\n    name: 'email',\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: 'Invalid email address, please try again!'\n      }\n    })\n  }), errors.email && errors.email.message, errors.email && errors.email.type === 'required' && createElement(\"p\", null, \"This field is required\"));\n}\n\nfunction Message() {\n  var _useFormContext = useFormContext(),\n      register = _useFormContext.register,\n      errors = _useFormContext.errors;\n\n  return createElement(\"div\", {\n    className: 'message_wrapper'\n  }, createElement(StyledLabel, null, \"Message\"), createElement(StyledMessageInput, {\n    name: 'message',\n    className: 'message_input',\n    ref: register({\n      required: true,\n      minLength: 55\n    })\n  }), errors.message && errors.message.type === 'required' && createElement(\"p\", null, \"This field is required\"), errors.message && errors.message.type === 'minLength' && createElement(\"p\", null, \"More characters needed!\"));\n}\n\nfunction SubmitButton(_ref) {\n  var buttonTitle = _ref.buttonTitle;\n  return createElement(\"div\", {\n    className: 'buttonTitle_wrapper'\n  }, createElement(StyledButton, {\n    type: 'submit'\n  }, buttonTitle || 'Submit'));\n}\n\nexport default Form;\nexport { Email, FirstName, Heading, LastName, Message, SubmitButton };","map":{"version":3,"sources":["../src/styles.tsx","../src/Form.tsx","../src/Heading.tsx","../src/FirstName.tsx","../src/LastName.tsx","../src/Email.tsx","../src/Message.tsx","../src/SubmitButton.tsx"],"names":["StyledHeading","styled","props","StyledInput","StyledMessageInput","StyledLabel","StyledButton","StyledForm","defaultTheme","primaryColor","primaryFont","buttonLetterSpacing","buttonPadding","buttonBackgroundColor","buttonFontColor","headingBackgroundColor","headingBorderRadius","headingSize","headingColor","inputBackgroundColor","inputBorderRadius","inputBorderWeight","inputBorderColor","formPadding","formBorderRadius","formBorderWeight","formBorderColor","backgroundColor","title","fontWeight","width","headingBorderBottom","headingBorderColor","messageInputHeight","buttonHoverColor","children","theme","methods","useForm","onSubmit","console","Object","React","className","register","errors","useFormContext","name","ref","required","pattern","value","message","minLength","buttonTitle","type"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledHeading = styled.h1`\n  font-weight: ${(props: any) => props.theme.fontWeight};\n  color: ${(props: any) => props.theme.headingColor};\n  text-align: center;\n  padding-bottom: 10px;\n  border-bottom: ${(props: any) => props.theme.headingBorderBottom} solid\n    ${(props: any) => props.theme.headingBorderColor};\n  font-family: ${(props: any) => props.theme.primaryFont};\n  font-size: ${(props: any) => props.theme.headingSize};\n  background-color: ${(props: any) => props.theme.headingBackgroundColor};\n  border-radius: ${(props: any) => props.theme.headingBorderRadius};\n  display: flex;\n  justify-content: center;\n`\n\nexport const StyledInput = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.inputBorderRadius};\n  border: ${(props: any) => props.theme.inputBorderWeight} solid\n    ${(props: any) => props.theme.inputBorderColor};\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  height: 40px;\n  background-color: ${(props: any) => props.theme.inputBackgroundColor};\n`\n\nexport const StyledMessageInput = styled.input`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.inputBorderRadius};\n  border: ${(props: any) => props.theme.inputBorderWeight} solid\n    ${(props: any) => props.theme.inputBorderColor};\n  padding: 10x 15px;\n  margin-bottom: 10px;\n  font-size: 14px;\n  background-color: ${(props: any) => props.theme.inputBackgroundColor};\n  height: ${(props: any) => props.theme.messageInputHeight};\n`\n\nexport const StyledLabel = styled.label`\n  line-height: 2;\n  text-align: left;\n  display: block;\n  margin-bottom: 13px;\n  margin-top: 20px;\n  color: ${(props: any) => props.theme.primaryColor};\n  font-size: 14px;\n  font-weight: 200;\n  font-family: ${(props: any) => props.theme.primaryFont};\n`\nexport const StyledButton = styled.button`\n  display: block;\n  box-sizing: border-box;\n  width: 100%;\n  border-radius: ${(props: any) => props.theme.inputBorderRadius};\n  border: ${(props: any) => props.theme.inputBorder};\n  padding: 10px 15px;\n  margin-bottom: 10px;\n  background: grey;\n  font-family: ${(props: any) => props.theme.primaryFont};\n  text-align: center;\n  background-color: ${(props: any) => props.theme.buttonBackgroundColor};\n  color: ${(props: any) => props.theme.buttonFontColor};\n  text-transform: uppercase;\n  border: none;\n  margin-top: 30px;\n  padding: ${(props: any) => props.theme.buttonPadding};\n  font-size: 20px;\n  font-weight: ${(props: any) => props.theme.fontWeight};\n  display: flex;\n  justify-content: center;\n  letter-spacing: ${(props: any) => props.theme.buttonLetterSpacing};\n  margin-right: ${(props: any) => '-' + props.theme.buttonLetterSpacing};\n  &:hover {\n    background: ${(props: any) => props.theme.buttonHoverColor};\n  }\n  &:active {\n    transition: 0.3s all;\n    transform: translateY(5px);\n    border: 1px solid transparent;\n    opacity: 0.8;\n  }\n`\n\nexport const StyledForm = styled.form`\n  width: ${(props: any) => props.theme.width};\n  margin: auto;\n  margin-top: 1em;\n  border: ${(props: any) => props.theme.formBorderWeight} solid\n    ${(props: any) => props.theme.formBorderColor};\n  color: ${(props: any) => props.theme.primaryColor};\n  background-color: ${(props: any) => props.theme.backgroundColor};\n  padding: ${(props: any) => props.theme.formPadding};\n  border-radius: ${(props: any) => props.theme.formBorderRadius};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n","import * as React from 'react'\nimport { useForm, FormProvider } from 'react-hook-form'\nimport { ThemeProvider } from 'styled-components'\nimport { StyledForm } from './styles'\n\nexport interface Theme {\n  primaryColor?: string\n  primaryFont?: string\n  inputBorderRadius?: string\n  inputBorder?: string\n  inputBackgroundColor?: string\n  width?: string\n  fontWeight?: string\n  buttonFontColor?: string\n  headingColor?: string\n  headingSize?: string\n  backgroundColor?: string\n  buttonBackgroundColor?: string\n  formPadding?: string\n  formBorderRadius?: string\n  headingBackgroundColor?: string\n  headingBorderRadius?: string\n  buttonPadding?: string\n  buttonLetterSpacing?: string\n  headingBorderBottom?: string\n  messageInputHeight?: string\n  buttonHoverColor?: string\n}\n\nexport interface formProps {\n  children?: JSX.Element[] | JSX.Element\n  theme: Theme\n}\n\nconst defaultTheme = {\n  primaryColor: 'black',\n  primaryFont: 'Courier New',\n  buttonLetterSpacing: '20px',\n  buttonPadding: '20px',\n  buttonBackgroundColor: 'black',\n  buttonFontColor: 'white',\n  headingBackgroundColor: '#fbf8f5',\n  headingBorderRadius: '',\n  headingSize: '30px',\n  headingColor: 'black',\n  inputBackgroundColor: 'white',\n  inputBorderRadius: '15px',\n  inputBorderWeight: '2px',\n  inputBorderColor: 'grey',\n  formPadding: '20px',\n  formBorderRadius: '35px',\n  formBorderWeight: '1px',\n  formBorderColor: 'grey',\n  backgroundColor: '#fbf8f5',\n  title: 'bonjour',\n  fontWeight: '200',\n  width: '325px',\n  headingBorderBottom: '2px',\n  headingBorderColor: 'black',\n  messageInputHeight: '70px',\n  buttonHoverColor: 'grey'\n}\n\nfunction Form({ children, theme }: formProps) {\n  const methods = useForm()\n  const onSubmit = (data: Object) => console.log(data)\n\n  Object.assign(defaultTheme, theme)\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <FormProvider {...methods}>\n        <StyledForm className='App' onSubmit={methods.handleSubmit(onSubmit)}>\n          {children}\n        </StyledForm>\n      </FormProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default Form\n","import * as React from 'react'\nimport { StyledHeading } from './styles'\nimport './styles.css'\n\ninterface headingProps {\n  title: string\n}\n\nfunction Heading({ title }: headingProps) {\n  return (\n    <div className='heading_wrapper'>\n      <StyledHeading> {title || 'Get in touch!'}</StyledHeading>\n    </div>\n  )\n}\n\nexport default Heading\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  firstName: string\n}\n\nfunction FirstName() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='first_name_wrapper'>\n      <StyledLabel>First Name</StyledLabel>\n      <StyledInput name='firstName' ref={register({ required: true })} />\n      {errors.firstName && <p>This field is required</p>}\n    </div>\n  )\n}\n\nexport default FirstName\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  lastName: string\n}\n\nfunction LastName() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='last_name_wrapper'>\n      <StyledLabel>Last Name</StyledLabel>\n      <StyledInput name='lastName' ref={register({ required: true })} />\n      {errors.lastName && <p>This field is required</p>}\n    </div>\n  )\n}\n\nexport default LastName\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  email: string\n}\n\nfunction Email() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='email_wrapper'>\n      <StyledLabel>Email Address</StyledLabel>\n      <StyledInput\n        name='email'\n        ref={register({\n          required: true,\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: 'Invalid email address, please try again!'\n          }\n        })}\n      />\n      {errors.email && errors.email.message}\n      {errors.email && errors.email.type === 'required' && (\n        <p>This field is required</p>\n      )}\n    </div>\n  )\n}\n\nexport default Email\n","import * as React from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { StyledMessageInput, StyledLabel } from './styles'\n\ntype Inputs = {\n  message: string\n}\n\nfunction Message() {\n  const { register, errors } = useFormContext<Inputs>()\n\n  return (\n    <div className='message_wrapper'>\n      <StyledLabel>Message</StyledLabel>\n      <StyledMessageInput\n        name='message'\n        className='message_input'\n        ref={register({ required: true, minLength: 55 })}\n      />\n      {errors.message && errors.message.type === 'required' && (\n        <p>This field is required</p>\n      )}\n      {errors.message && errors.message.type === 'minLength' && (\n        <p>More characters needed!</p>\n      )}\n    </div>\n  )\n}\n\nexport default Message\n","import * as React from 'react'\nimport { StyledButton } from './styles'\nimport './styles.css'\n\ninterface submitButtonProps {\n  buttonTitle: string\n}\n\nfunction SubmitButton({ buttonTitle }: submitButtonProps) {\n  return (\n    <div className='buttonTitle_wrapper'>\n      <StyledButton type='submit'>{buttonTitle || 'Submit'}</StyledButton>\n    </div>\n  )\n}\n\nexport default SubmitButton\n"]},"metadata":{},"sourceType":"module"}